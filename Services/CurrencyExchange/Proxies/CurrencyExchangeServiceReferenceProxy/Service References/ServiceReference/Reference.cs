//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.21006.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CurrencyExchangeServiceReferenceProxy.ServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Currencies", Namespace="http://Fabrikam.com")]
    public enum Currencies : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dollar = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Euro = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yen = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pound = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dinar = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Fabrikam.com", ConfigurationName="ServiceReference.IExchangeService")]
    public interface IExchangeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Fabrikam.com/IExchangeService/Buy", ReplyAction="http://Fabrikam.com/IExchangeService/BuyResponse")]
        double Buy(CurrencyExchangeServiceReferenceProxy.ServiceReference.Currencies currency, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Fabrikam.com/IExchangeService/Sell", ReplyAction="http://Fabrikam.com/IExchangeService/SellResponse")]
        double Sell(CurrencyExchangeServiceReferenceProxy.ServiceReference.Currencies currency, double amount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExchangeServiceChannel : CurrencyExchangeServiceReferenceProxy.ServiceReference.IExchangeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExchangeServiceClient : System.ServiceModel.ClientBase<CurrencyExchangeServiceReferenceProxy.ServiceReference.IExchangeService>, CurrencyExchangeServiceReferenceProxy.ServiceReference.IExchangeService {
        
        public ExchangeServiceClient() {
        }
        
        public ExchangeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExchangeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExchangeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExchangeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Buy(CurrencyExchangeServiceReferenceProxy.ServiceReference.Currencies currency, double amount) {
            return base.Channel.Buy(currency, amount);
        }
        
        public double Sell(CurrencyExchangeServiceReferenceProxy.ServiceReference.Currencies currency, double amount) {
            return base.Channel.Sell(currency, amount);
        }
    }
}
