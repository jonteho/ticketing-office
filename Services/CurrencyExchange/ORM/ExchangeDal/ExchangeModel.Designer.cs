//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace TicketingOffice.CurrencyExchange.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TicketingOfficeExchangeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TicketingOfficeExchangeEntities object using the connection string found in the 'TicketingOfficeExchangeEntities' section of the application configuration file.
        /// </summary>
        public TicketingOfficeExchangeEntities() : base("name=TicketingOfficeExchangeEntities", "TicketingOfficeExchangeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TicketingOfficeExchangeEntities object.
        /// </summary>
        public TicketingOfficeExchangeEntities(string connectionString) : base(connectionString, "TicketingOfficeExchangeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TicketingOfficeExchangeEntities object.
        /// </summary>
        public TicketingOfficeExchangeEntities(EntityConnection connection) : base(connection, "TicketingOfficeExchangeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExchangeRate> ExchangeRates
        {
            get
            {
                if ((_ExchangeRates == null))
                {
                    _ExchangeRates = base.CreateObjectSet<ExchangeRate>("ExchangeRates");
                }
                return _ExchangeRates;
            }
        }
        private ObjectSet<ExchangeRate> _ExchangeRates;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExchangeRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExchangeRates(ExchangeRate exchangeRate)
        {
            base.AddObject("ExchangeRates", exchangeRate);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TicketingOfficeModel", Name="ExchangeRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExchangeRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExchangeRate object.
        /// </summary>
        /// <param name="currency">Initial value of the Currency property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        public static ExchangeRate CreateExchangeRate(global::System.String currency, global::System.Double rate)
        {
            ExchangeRate exchangeRate = new ExchangeRate();
            exchangeRate.Currency = currency;
            exchangeRate.Rate = rate;
            return exchangeRate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                if (_Currency != value)
                {
                    OnCurrencyChanging(value);
                    ReportPropertyChanging("Currency");
                    _Currency = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Currency");
                    OnCurrencyChanged();
                }
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Double _Rate;
        partial void OnRateChanging(global::System.Double value);
        partial void OnRateChanged();

        #endregion
    
    }

    #endregion
    
}
